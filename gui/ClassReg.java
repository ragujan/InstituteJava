/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import Util.CreateObject;
import Util.FilterDocRagRegex;
import Util.InsertTable;
import Util.JOP;
import Util.LoadCatsNBrands;
import Util.LoadTables;
import Util.SearchTable;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import jdk.nashorn.internal.objects.annotations.Where;
import model.MySql;

/**
 *
 * @author acer
 */
public class ClassReg extends javax.swing.JFrame {

    /**
     * Creates new form ClassReg
     */
    public ClassReg() {
        initComponents();
        //LoadCatsNBrands lcnb = new LoadCatsNBrands();
        lcnb.loadSubject(jComboBox1);
        lcnb.loadSubject(searchSubject);
        ArrayList<String> al = new ArrayList<String>();
        al.add("class");
        al.add("teacher,class");
        al.add("subject,class");
        SearchTable st = new SearchTable(al);
        this.loadTableQuery = st.getTableQuery();
        loadTable();
    }

    public ClassReg(StudentEnrollment se) {
        this();
        this.se = se;
        isStudentEnrollInvolved = true;
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.cr = this;
        tableListernRag();

        setValidation();
    }

    public ClassReg(AdvancedSearch as) {
        this();
        this.as = as;
        isAdvancedSearchInvolved = true;
        this.cr = this;
        tableListernRag();

        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    }

    boolean isStudentEnrollInvolved;
    ClassReg cr;

    boolean isAdvancedSearchInvolved;
    AdvancedSearch as;
    StudentEnrollment se;
    String loadTableQuery;

    public String selectedTeacherSubjectId = "";
    String[] colnames = {"class_id", "class_desc", "teacher_name", "subject_name", "subject_price", "class_time", "duration"};
    LoadCatsNBrands lcnb = new LoadCatsNBrands();

    public void loadTable() {
        String sort = "ORDER BY `class_desc` ASC";

        StringBuilder stringquerybuild = new StringBuilder();
        stringquerybuild.append(this.loadTableQuery).toString();
        stringquerybuild.append(sort).toString();
        String query = stringquerybuild.toString();

        LoadTables lt = new LoadTables(jTable1, query, this.colnames);

    }

    public void setValidation() {

    }

    public void tableListernRag() {
        jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                int row = jTable1.getSelectedRow();
                if (row != -1) {

                    String cid = jTable1.getValueAt(row, 0).toString();
                    String cdesc = jTable1.getValueAt(row, 1).toString();
                    String csub = jTable1.getValueAt(row, 3).toString();
                    String price = jTable1.getValueAt(row, 4).toString();
                    if (isStudentEnrollInvolved) {
                        se.cid.setText(cid);
                        se.cdesc.setText(cdesc);
                        se.subname.setText(csub);
                        se.price.setText(price);
                        cr.dispose();

                    }
                    if (isAdvancedSearchInvolved) {
                        as.searchdesc.setText(cdesc);
                        as.searchSubject.setSelectedItem(csub);
                        cr.dispose();

                    }
                    //  jDateChooser1.setDate(sdf.parse(sdob));
                    //  Date d = new Date
                    //jDateChooser1.setDate()

                }
            }

        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateComponentFormatter2 = new org.jdatepicker.impl.DateComponentFormatter();
        utilDateModel1 = new org.jdatepicker.impl.UtilDateModel();
        utilCalendarModel1 = new org.jdatepicker.impl.UtilCalendarModel();
        sqlDateModel1 = new org.jdatepicker.impl.SqlDateModel();
        jDatePickerUtil1 = new org.jdatepicker.util.JDatePickerUtil();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        tid = new javax.swing.JLabel();
        tname = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jComboBox5 = new javax.swing.JComboBox<>();
        searchdesc = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jComboBox7 = new javax.swing.JComboBox<>();
        searchtname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        searchSubject = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        jComboBox8 = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Class Description");

        tid.setText("none");

        tname.setText("none");

        jLabel5.setText("Select Subject");

        jLabel6.setText("Choose Time Slot");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60" }));

        jButton1.setText("Add Class");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Class_Id", "Des", "Teacher", "Subject", "price", "Date&Time", "Duration"
            }
        ));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        jButton2.setText("Select Teacher");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Duration");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8" }));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "15", "30", "45" }));

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DATE LATEST", "DATE OLD", "PRICE EXPENSIVE", "PRICE CHEAP", "DESC AZ", "DESC ZA", "TEACHER AZ", "TEACHER ZA", "TIME LONG", "TIME SHORT" }));
        jComboBox7.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox7PropertyChange(evt);
            }
        });

        jLabel3.setText("Sort");

        jLabel4.setText("Desc");

        jLabel7.setText("Teacher");

        jLabel8.setText("Subject");

        jButton4.setText("Clear");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel9.setText("Duration");

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none", "1", "2", "3", "4", "5", "6", "7", "8" }));

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none", "00", "15", "30", "45" }));

        jButton5.setText("Home");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1)
                                        .addComponent(jLabel1)
                                        .addComponent(tid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(2, 2, 2)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchdesc, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchtname, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(searchSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jButton5))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tid, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tname, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel3))
                        .addComponent(jLabel4))
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchdesc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchtname, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jComboBox6)
                    .addComponent(jComboBox8))
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton5))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        TeacherReg tr = new TeacherReg(this);
        tr.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed
    //insert 
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String hour = jComboBox2.getSelectedItem().toString();
        String minute = jComboBox3.getSelectedItem().toString();
        StringBuilder sttime = new StringBuilder();
        sttime.append(hour);
        sttime.append(":");
        sttime.append(minute);
        sttime.append(":");
        sttime.append("00");
        StringBuilder durationTimeStringBuilder = new StringBuilder();
        String duHour = jComboBox4.getSelectedItem().toString();
        String duMinute = jComboBox5.getSelectedItem().toString();
        durationTimeStringBuilder.append(duHour);
        durationTimeStringBuilder.append(":");
        durationTimeStringBuilder.append(duMinute);
        durationTimeStringBuilder.append(":");
        durationTimeStringBuilder.append("00");
        String durationTime = durationTimeStringBuilder.toString();

        String starttime = sttime.toString();
        String des = jTextArea1.getText();
        String tid = this.tid.getText();
        String subject = jComboBox1.getSelectedItem().toString();
        System.out.println("des is " + des);

        if (des.isEmpty()) {
            JOP.setJOPMessage(this, "Please enter description", "Warning", 1);
        } else if (tid.equals("none")) {
            JOP.setJOPMessage(this, "Please Select a teacher", "Warning", 1);
        } else if (subject.equals("Select Subject")) {
            JOP.setJOPMessage(this, "Please Select a valid subject", "Warning", 1);
        } else if (jDateChooser1.getDate() == null) {
            JOP.setJOPMessage(this, "Please Select a date", "Warning", 1);
        } else if (jDateChooser1.getDate().before(new Date())) {
            JOP.setJOPMessage(this, "This is not a valid date", "Warning", 1);
        } else {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(jDateChooser1.getDate()).toString();
            String dnt = date + " " + starttime;
            boolean isTimeCollapse = false;
            try {
                ResultSet rs = MySql.sq("SELECT `subject_id` FROM `subject` WHERE `subject_name`='" + subject + "'");
                rs.next();
                String subjectId = rs.getString("subject_id");
                rs = MySql.sq("SELECT * FROM `class` WHERE `teacher_id`='" + tid + "' ");

                while (rs.next()) {

                    String stime = rs.getString("start");
                    String dtime = rs.getString("duration");
                    //     int formatstime = Integer.parseInt(new SimpleDateFormat("hh:mm:ss").parse(stime));
                    //  int formatdtime = Integer.parseInt(new SimpleDateFormat("hh:mm:ss").parse(dtime));

                }

                if (!subject.equals(selectedTeacherSubjectId)) {
                    JOP.setJOPMessage(this, "Teacher subject is not matching", "Warning", 1);
                } else if (isTimeCollapse) {
                    JOP.setJOPMessage(this, "Class teacher time slots are colliding", "Warning", 1);
                } else {
                    ArrayList<String> info = new ArrayList<String>();
                    info.add(des);
                    info.add(dnt);
                    info.add(durationTime);
                    info.add(starttime);
                    info.add(subjectId);
                    info.add(tid);
                    InsertTable it = new InsertTable("class", info);
                    loadTable();
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ClassReg.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ClassReg.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox7PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox7PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox7PropertyChange

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String sort = jComboBox7.getSelectedItem().toString();
        String searchText = searchdesc.getText();
        String teacherText = searchtname.getText();
        String subjectText = searchSubject.getSelectedItem().toString();
        String hour = jComboBox6.getSelectedItem().toString();
        String min = jComboBox8.getSelectedItem().toString();
        String sortQuery = null;
        boolean isDurationNotChosen = true;
        if (!hour.equals("none") || !min.equals("none")) {
            isDurationNotChosen = false;
        }
        if (searchText.isEmpty() && teacherText.isEmpty() && subjectText.equals("Select Subject") && isDurationNotChosen) {
            if (sort.equals("DATE LATEST")) {
                sortQuery = "ORDER BY `class_time` DESC";
            } else if (sort.equals("DATE OLD")) {
                sortQuery = "ORDER BY `class_time` ASC";
            } else if (sort.equals("PRICE EXPENSIVE")) {
                sortQuery = "ORDER BY `subject_price` DESC";
            } else if (sort.equals("PRICE CHEAP")) {
                sortQuery = "ORDER BY `subject_price` ASC";
            } else if (sort.equals("DESC AZ")) {
                sortQuery = "ORDER BY `class_desc` ASC";
            } else if (sort.equals("DESC ZA")) {
                sortQuery = "ORDER BY `class_desc` DESC";
            } else if (sort.equals("TEACHER AZ")) {
                sortQuery = "ORDER BY `teacher_name` ASC";
            } else if (sort.equals("TEACHER ZA")) {
                sortQuery = "ORDER BY `teacher_name` DESC";
            } else if (sort.equals("TIME LONG")) {
                sortQuery = "ORDER BY `duration` DESC";
            } else if (sort.equals("TIME SHORT")) {
                sortQuery = "ORDER BY `duration` ASC";
            }

            StringBuilder stringquerybuild = new StringBuilder();
            stringquerybuild.append(this.loadTableQuery).toString();
            stringquerybuild.append(sortQuery).toString();
            String query = stringquerybuild.toString();

            LoadTables lt = new LoadTables(jTable1, query, this.colnames);
        } else {
            if (sort.equals("DATE LATEST")) {
                sortQuery = "ORDER BY `class_time` DESC";
            } else if (sort.equals("DATE OLD")) {
                sortQuery = "ORDER BY `class_time` ASC";
            } else if (sort.equals("PRICE EXPENSIVE")) {
                sortQuery = "ORDER BY `subject_price` DESC";
            } else if (sort.equals("PRICE CHEAP")) {
                sortQuery = "ORDER BY `subject_price` ASC";
            } else if (sort.equals("DESC AZ")) {
                sortQuery = "ORDER BY `class_desc` ASC";
            } else if (sort.equals("DESC ZA")) {
                sortQuery = "ORDER BY `class_desc` DESC";
            } else if (sort.equals("TEACHER AZ")) {
                sortQuery = "ORDER BY `teacher_name` ASC";
            } else if (sort.equals("TEACHER ZA")) {
                sortQuery = "ORDER BY `teacher_name` DESC";
            } else if (sort.equals("TIME LONG")) {
                sortQuery = "ORDER BY `duration` DESC";
            } else if (sort.equals("TIME SHORT")) {
                sortQuery = "ORDER BY `duration` ASC";
            }
            StringBuilder stringquerybuild = new StringBuilder();

            StringBuilder whereQueryBuilder = new StringBuilder();
            Vector<String> v = new Vector<String>();

            if (!searchText.isEmpty()) {
                String descWhere = "`class_desc` LIKE '%" + searchText + "%' ";
                v.add(descWhere);
            }
            if (!teacherText.isEmpty()) {
                String teacherWhere = "`teacher_name` LIKE '%" + teacherText + "%' ";
                v.add(teacherWhere);
            }
            if (!subjectText.isEmpty() && !(subjectText.equals("Select Subject"))) {
                String subjectWhere = "`subject_name` = '" + subjectText + "'  ";
                v.add(subjectWhere);
            }
            if (!hour.equals("none") && !min.equals("none")) {
                String hours = hour + ":" + min + ":" + "00";
                String timeWhere = "`duration`='" + hours + "' ";
                v.add(timeWhere);
            }
            System.out.println("vector size is " + v.size());
            whereQueryBuilder.append("where ");
            for (int i = 0; i < v.size(); i++) {
                System.out.println("vectors are " + v.get(i));

                whereQueryBuilder.append("");
                whereQueryBuilder.append(v.get(i));

                if (i != v.size() - 1) {
                    whereQueryBuilder.append("AND ");
                }
            }
            System.out.println("string build is " + stringquerybuild);
            stringquerybuild.append(this.loadTableQuery);
            stringquerybuild.append(whereQueryBuilder);
            stringquerybuild.append(sortQuery);
            String query = stringquerybuild.toString();

            LoadTables lt = new LoadTables(jTable1, query, this.colnames);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        loadTable();
        jComboBox6.setSelectedIndex(0);
        jComboBox8.setSelectedIndex(0);
        lcnb.loadSubject(searchSubject);


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        CreateObject.make(new Home());
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClassReg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClassReg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClassReg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClassReg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClassReg().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdatepicker.impl.DateComponentFormatter dateComponentFormatter2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JComboBox<String> jComboBox7;
    private javax.swing.JComboBox<String> jComboBox8;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JComboBox<String> searchSubject;
    private javax.swing.JTextField searchdesc;
    private javax.swing.JTextField searchtname;
    private org.jdatepicker.impl.SqlDateModel sqlDateModel1;
    public javax.swing.JLabel tid;
    public javax.swing.JLabel tname;
    private org.jdatepicker.impl.UtilCalendarModel utilCalendarModel1;
    private org.jdatepicker.impl.UtilDateModel utilDateModel1;
    // End of variables declaration//GEN-END:variables
}
